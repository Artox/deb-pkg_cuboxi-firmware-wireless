### BEGIN INIT INFO
# Provides:          brcm_patchram_plus
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     
# Default-Stop:      0 1 6
# Short-Description: Load broadcom bluetooth firmware
# Description:       Enable bluetooth firmware loading service.
### END INIT INFO

DESC="Broadcom bluetooth firmware loader"
NAME=brcm_patchram_plus
DAEMON=/usr/sbin/brcm_patchram_plus
DAEMON_ARGS="--baudrate 3000000 --use_baudrate_for_download /dev/ttymxc3 --enable_hci --no2bytes --tosleep=50000"
PIDFILE=/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# detect bluetooth chip
select_firmware() {
	device=
	for dev in `find -L /sys/bus/sdio/drivers/brcmfmac_sdio -maxdepth 2 -name device 2>/dev/null`
	do
		newdev=`cat $dev`
		if [ -z "$device" ]; then
			device=$newdev
		else
			if [ "$newdev" = "$device" ]; then
				# nothing special to do
				continue
			else
				echo "Warning: found conflicting device IDs $device and $newdev!"
				device=$newdev
			fi
		fi
	done

	# select firmware
	firmware=
	case $device in
	0x4329)
		firmware=/lib/firmware/brcm/bcm4329.hcd
		;;
	0x4330)
		firmware=/lib/firmware/brcm/bcm4330.hcd
		;;
	*)
#		echo "Error: Unknown device $device!"
		exit 1
		;;
	esac
}

# daemon start code
do_start() {
	# find firmware
	select_firmware
	test -z "$firmware" && return 3

	start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null || return 1
	start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- $DAEMON_ARGS --patchram $firmware || return 2
}

# daemon stop code
do_stop() {
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
        test $? -eq 2 && return 2
        rm -f $PIDFILE
}

. /lib/lsb/init-functions

case "$1" in
  start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2|3) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  status)
        status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
        ;;
#  not-implemented)
#        log_daemon_msg "Reloading $DESC" "$NAME"
#        do_reload
#        log_end_msg $?
#        ;;
  restart|force-reload)
        log_daemon_msg "Restarting $DESC" "$NAME"
        do_stop
        case "$?" in
          0|1)
                do_start
                case "$?" in
                        0) log_end_msg 0 ;;
                        1) log_end_msg 1 ;; # Old process is still running
                        *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
          *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;
  *)
        echo "$SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
        exit 3
        ;;
esac
